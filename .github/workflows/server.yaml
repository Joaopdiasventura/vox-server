name: Continuous Integration and Deployment

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install Dependencies, Lint, Test, and Build
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build

  docker_push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build docker image
        run: docker build -t jpplay/vox-server .

      - name: Push docker image
        run: docker push jpplay/vox-server:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: docker_push
    runs-on: self-hosted
    steps:
      - name: Pull vox image from Docker Hub
        run: docker pull jpplay/vox-server:latest

      - name: Run the first docker container
        run: |
          docker rm -f vox-server || true && \
          docker run -d -p 8080:3000 \
            -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            -e EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}" \
            -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e SALTS="${{ secrets.SALTS }}" \
            -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
            -e URL="${{ secrets.URL }}" \
            --name vox-server jpplay/vox-server:latest
    
