name: Continuous Integration and Deployment

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 22

      - name: Install Dependencies, Lint, Test, and Build
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build

  docker_push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Server image
        run: docker build -t jpplay/vox-server .

      - name: Build and tag Load Balancer load-balancer image
        run: docker build -t jpplay/vox-load-balancer ./nginx

      - name: Push Server image
        run: docker push jpplay/vox-server:latest

      - name: Push Load Balancer image
        run: docker push jpplay/vox-load-balancer:latest

  deploy:
  if: github.ref == 'refs/heads/main'
  needs: docker_push
  runs-on: self-hosted
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Pull images
      run: |
        docker pull jpplay/vox-server:latest
        docker pull jpplay/vox-load-balancer:latest

    - name: Stop and remove old containers
      run: |
        docker rm -f server-1 server-2 server-3 load-balancer || true

    - name: Run server-1
      run: |
        docker run -d --name server-1 \
          -e MONGO_URI="${{ secrets.MONGO_URI }}" \
          -e EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}" \
          -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
          -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
          -e SALTS="${{ secrets.SALTS }}" \
          -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
          -e URL="${{ secrets.URL }}" \
          jpplay/vox-server:latest

    - name: Run server-2
      run: |
        docker run -d --name server-2 \
          -e MONGO_URI="${{ secrets.MONGO_URI }}" \
          -e EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}" \
          -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
          -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
          -e SALTS="${{ secrets.SALTS }}" \
          -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
          -e URL="${{ secrets.URL }}" \
          jpplay/vox-server:latest

    - name: Run server-3
      run: |
        docker run -d --name server-3 \
          -e MONGO_URI="${{ secrets.MONGO_URI }}" \
          -e EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}" \
          -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
          -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
          -e SALTS="${{ secrets.SALTS }}" \
          -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
          -e URL="${{ secrets.URL }}" \
          jpplay/vox-server:latest

    - name: Run NGINX load-balancer
      run: |
        docker run -d --name load-balancer -p 80:80 \
          -e SERVER_1=server-1:3000 \
          -e SERVER_2=server-2:3000 \
          -e SERVER_3=server-3:3000 \
          --link server-1 --link server-2 --link server-3 \
          jpplay/vox-load-balancer:latest

    
